{"version":3,"sources":["socket.js","reducer.js","components/JoinBlock.jsx","components/Chat.jsx","App.js","index.js"],"names":["socket","io","state","action","type","joined","userName","payload","roomId","users","messages","JoinBlock","onLogin","React","useState","setRoomId","setUserName","isLoading","setLoading","onEnter","a","alert","obj","axios","post","className","placeholder","value","onChange","e","target","disabled","onClick","Chat","onAddMessage","messageValue","setMessageValue","messagesRef","useRef","useEffect","current","scrollTo","length","map","name","index","key","ref","message","text","rows","emit","App","useReducer","reducer","dispatch","get","data","setUsers","addMessage","on","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21e9a0cf.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst socket = io();\r\n\r\nexport default socket;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'JOINED':\r\n      return {\r\n        ...state,\r\n        joined: true,\r\n        userName: action.payload.userName,\r\n        roomId: action.payload.roomId,\r\n      };\r\n\r\n    case 'SET_DATA':\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n        messages: action.payload.messages,\r\n      };\r\n\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    case 'NEW_MESSAGE':\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction JoinBlock({ onLogin }) {\r\n  const [roomId, setRoomId] = React.useState('');\r\n  const [userName, setUserName] = React.useState('');\r\n  const [isLoading, setLoading] = React.useState(false);\r\n\r\n  const onEnter = async () => {\r\n    if (!roomId || !userName) {\r\n      return alert('Неверные данные');\r\n    }\r\n    const obj = {\r\n      roomId,\r\n      userName,\r\n    };\r\n    setLoading(true);\r\n    await axios.post('/rooms', obj);\r\n    onLogin(obj);\r\n  };\r\n\r\n  return (\r\n    <div className=\"join-block\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Room ID\"\r\n        value={roomId}\r\n        onChange={(e) => setRoomId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ваше имя\"\r\n        value={userName}\r\n        onChange={(e) => setUserName(e.target.value)}\r\n      />\r\n      <button disabled={isLoading} onClick={onEnter} className=\"btn btn-success\">\r\n        {isLoading ? 'ВХОД...' : 'ВОЙТИ'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinBlock;\r\n","import React from 'react';\r\nimport socket from '../socket';\r\n\r\nfunction Chat({ users, messages, userName, roomId, onAddMessage }) {\r\n  const [messageValue, setMessageValue] = React.useState('');\r\n  const messagesRef = React.useRef(null);\r\n\r\n  const onSendMessage = () => {\r\n    socket.emit('ROOM:NEW_MESSAGE', {\r\n      userName,\r\n      roomId,\r\n      text: messageValue,\r\n    });\r\n    onAddMessage({ userName, text: messageValue });\r\n    setMessageValue('');\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    messagesRef.current.scrollTo(0, 99999);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat-users\">\r\n        Комната: <b>{roomId}</b>\r\n        <hr />\r\n        <b>Онлайн ({users.length}):</b>\r\n        <ul>\r\n          {users.map((name, index) => (\r\n            <li key={name + index}>{name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"chat-messages\">\r\n        <div ref={messagesRef} className=\"messages\">\r\n          {messages.map((message) => (\r\n            <div className=\"message\">\r\n              <p>{message.text}</p>\r\n              <div>\r\n                <span>{message.userName}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <form>\r\n          <textarea\r\n            value={messageValue}\r\n            onChange={(e) => setMessageValue(e.target.value)}\r\n            className=\"form-control\"\r\n            rows=\"3\"></textarea>\r\n          <button onClick={onSendMessage} type=\"button\" className=\"btn btn-primary\">\r\n            Отправить\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport socket from './socket';\r\n\r\nimport reducer from './reducer';\r\nimport JoinBlock from './components/JoinBlock';\r\nimport Chat from './components/Chat';\r\n\r\nfunction App() {\r\n  const [state, dispatch] = React.useReducer(reducer, {\r\n    joined: false,\r\n    roomId: null,\r\n    userName: null,\r\n    users: [],\r\n    messages: [],\r\n  });\r\n\r\n  const onLogin = async (obj) => {\r\n    dispatch({\r\n      type: 'JOINED',\r\n      payload: obj,\r\n    });\r\n    socket.emit('ROOM:JOIN', obj);\r\n    const { data } = await axios.get(`/rooms/${obj.roomId}`);\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  const setUsers = (users) => {\r\n    dispatch({\r\n      type: 'SET_USERS',\r\n      payload: users,\r\n    });\r\n  };\r\n\r\n  const addMessage = (message) => {\r\n    dispatch({\r\n      type: 'NEW_MESSAGE',\r\n      payload: message,\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    socket.on('ROOM:SET_USERS', setUsers);\r\n    socket.on('ROOM:NEW_MESSAGE', addMessage);\r\n  }, []);\r\n\r\n  window.socket = socket;\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {!state.joined ? (\r\n        <JoinBlock onLogin={onLogin} />\r\n      ) : (\r\n        <Chat {...state} onAddMessage={addMessage} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}